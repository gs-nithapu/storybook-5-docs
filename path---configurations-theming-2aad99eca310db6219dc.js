webpackJsonp([0x5b39c2348053],{935:function(e,t){e.exports={data:{site:{siteMetadata:{docSections:{basics:["/basics/introduction/","/basics/writing-stories/","/basics/exporting-storybook/","/basics/faq/","/basics/live-examples/"],guides:["/guides/quick-start-guide/","/guides/slow-start-guide/","/guides/guide-html/","/guides/guide-react/","/guides/guide-react-native/","/guides/guide-vue/","/guides/guide-angular/","/guides/guide-mithril/","/guides/guide-marko/","/guides/guide-ember/","/guides/guide-riot/","/guides/guide-svelte/","/guides/guide-preact/"],configurations:["/configurations/overview/","/configurations/options-parameter/","/configurations/default-config/","/configurations/custom-webpack-config/","/configurations/custom-babel-config/","/configurations/typescript-config/","/configurations/add-custom-head-tags/","/configurations/add-custom-body/","/configurations/serving-static-files/","/configurations/env-vars/","/configurations/theming/","/configurations/cli-options/","/configurations/standalone-options/"],formats:["/formats/component-story-format/","/formats/storiesof-api/","/formats/mdx-syntax/"],testing:["/testing/react-ui-testing/","/testing/structural-testing/","/testing/interaction-testing/","/testing/automated-visual-testing/","/testing/manual-testing/"],addons:["/addons/introduction/","/addons/using-addons/","/addons/writing-addons/","/addons/api/"],presets:["/presets/introduction/","/presets/preset-gallery/","/presets/writing-presets/"]}}},allMarkdownRemark:{edges:[{node:{fields:{slug:"/configurations/add-custom-head-tags/"},frontmatter:{title:"Add Custom Head Tags",id:"add-custom-head-tags"}}},{node:{fields:{slug:"/configurations/add-custom-body/"},frontmatter:{title:"Add Custom Body",id:"add-custom-body"}}},{node:{fields:{slug:"/configurations/custom-postcss-config/"},frontmatter:{title:"Custom Postcss Config",id:"custom-postcss-config"}}},{node:{fields:{slug:"/404/"},frontmatter:{title:"",id:null}}},{node:{fields:{slug:"/configurations/cli-options/"},frontmatter:{title:"CLI Options",id:"cli-options"}}},{node:{fields:{slug:"/configurations/custom-babel-config/"},frontmatter:{title:"Custom Babel Config",id:"custom-babel-config"}}},{node:{fields:{slug:"/configurations/env-vars/"},frontmatter:{title:"Using Environment Variables",id:"env-vars"}}},{node:{fields:{slug:"/configurations/default-config/"},frontmatter:{title:"Default Config",id:"default-config"}}},{node:{fields:{slug:"/configurations/options-parameter/"},frontmatter:{title:"Options Parameter",id:"options-parameter"}}},{node:{fields:{slug:"/configurations/serving-static-files/"},frontmatter:{title:"Serving Static Files",id:"serving-static-files"}}},{node:{fields:{slug:"/configurations/standalone-options/"},frontmatter:{title:"Standalone Options",id:"standalone-options"}}},{node:{fields:{slug:"/configurations/overview/"},frontmatter:{title:"Configuration overview",id:"overview"}}},{node:{fields:{slug:"/configurations/theming/"},frontmatter:{title:"Theming Storybook",id:"theming"}}},{node:{fields:{slug:"/basics/faq/"},frontmatter:{title:"Frequently Asked Questions",id:"faq"}}},{node:{fields:{slug:"/basics/exporting-storybook/"},frontmatter:{title:"Exporting Storybook as a Static App",id:"exporting-storybook"}}},{node:{fields:{slug:"/basics/community/"},frontmatter:{title:"Community",id:"community"}}},{node:{fields:{slug:"/addons/using-addons/"},frontmatter:{title:"Using Addons",id:"using-addons"}}},{node:{fields:{slug:"/basics/introduction/"},frontmatter:{title:"Introduction",id:"introduction"}}},{node:{fields:{slug:"/basics/live-examples/"},frontmatter:{title:"Live Examples",id:"live-examples"}}},{node:{fields:{slug:"/basics/toolbar-guide/"},frontmatter:{title:"Toolbar",id:"toolbar-guide"}}},{node:{fields:{slug:"/formats/component-story-format/"},frontmatter:{title:"Component Story Format (CSF)",id:"component-story-format"}}},{node:{fields:{slug:"/formats/mdx-syntax/"},frontmatter:{title:"MDX Syntax",id:"mdx-syntax"}}},{node:{fields:{slug:"/guides/guide-angular/"},frontmatter:{title:"Storybook for Angular",id:"guide-angular"}}},{node:{fields:{slug:"/formats/storiesof-api/"},frontmatter:{title:"StoriesOf API",id:"storiesof-api"}}},{node:{fields:{slug:"/addons/introduction/"},frontmatter:{title:"Intro to Addons",id:"introduction"}}},{node:{fields:{slug:"/guides/guide-html/"},frontmatter:{title:"Storybook for HTML",id:"guide-html"}}},{node:{fields:{slug:"/guides/guide-mithril/"},frontmatter:{title:"Storybook for Mithril",id:"guide-mithril"}}},{node:{fields:{slug:"/guides/guide-marko/"},frontmatter:{title:"Storybook for Marko",id:"guide-marko"}}},{node:{fields:{slug:"/guides/guide-ember/"},frontmatter:{title:"Storybook for Ember",id:"guide-ember"}}},{node:{fields:{slug:"/guides/guide-rax/"},frontmatter:{title:"Storybook for Rax",id:"guide-rax"}}},{node:{fields:{slug:"/guides/guide-react-native/"},frontmatter:{title:"Storybook for React Native",id:"guide-react-native"}}},{node:{fields:{slug:"/guides/guide-preact/"},frontmatter:{title:"Storybook for Preact",id:"guide-preact"}}},{node:{fields:{slug:"/guides/guide-riot/"},frontmatter:{title:"Storybook for Riot",id:"guide-riot"}}},{node:{fields:{slug:"/guides/guide-react/"},frontmatter:{title:"Storybook for React",id:"guide-react"}}},{node:{fields:{slug:"/guides/guide-vue/"},frontmatter:{title:"Storybook for Vue",id:"guide-vue"}}},{node:{fields:{slug:"/guides/guide-svelte/"},frontmatter:{title:"Storybook for Svelte",id:"guide-svelte"}}},{node:{fields:{slug:"/guides/quick-start-guide/"},frontmatter:{title:"Quick Start Guide",id:"quick-start-guide"}}},{node:{fields:{slug:"/presets/preset-gallery/"},frontmatter:{title:"Preset Gallery",id:"preset-gallery"}}},{node:{fields:{slug:"/presets/writing-presets/"},frontmatter:{title:"Writing Presets",id:"writing-presets"}}},{node:{fields:{slug:"/guides/slow-start-guide/"},frontmatter:{title:"Slow Start Guide",id:"slow-start-guide"}}},{node:{fields:{slug:"/testing/manual-testing/"},frontmatter:{title:"Manual Testing",id:"manual-testing"}}},{node:{fields:{slug:"/testing/react-ui-testing/"},frontmatter:{title:"Introduction: React UI Testing",id:"react-ui-testing"}}},{node:{fields:{slug:"/presets/introduction/"},frontmatter:{title:"Intro to Presets",id:"introduction"}}},{node:{fields:{slug:"/testing/interaction-testing/"},frontmatter:{title:"Interaction Testing",id:"interaction-testing"}}},{node:{fields:{slug:"/testing/structural-testing/"},frontmatter:{title:"Structural Testing",id:"structural-testing"}}},{node:{fields:{slug:"/configurations/custom-webpack-config/"},frontmatter:{title:"Custom Webpack Config",id:"custom-webpack-config"}}},{node:{fields:{slug:"/configurations/typescript-config/"},frontmatter:{title:"TypeScript Config",id:"typescript-config"}}},{node:{fields:{slug:"/addons/addon-gallery/"},frontmatter:{title:"Addon Gallery",id:"addon-gallery"}}},{node:{fields:{slug:"/addons/writing-addons/"},frontmatter:{title:"Writing Addons",id:"writing-addons"}}},{node:{fields:{slug:"/addons/api/"},frontmatter:{title:"API",id:"api"}}},{node:{fields:{slug:"/basics/writing-stories/"},frontmatter:{title:"Writing Stories",id:"writing-stories"}}},{node:{fields:{slug:"/testing/automated-visual-testing/"},frontmatter:{title:"Automated Visual Testing",id:"automated-visual-testing"}}}]},markdownRemark:{html:'<p>Storybook is theme-able!</p>\n<blockquote>\n<p>Note that theming storybook changed recently, to be in <code>manager.js</code> (introduced in 5.3). But addon-docs is not yet compatible with this new way of configuring the theme.</p>\n<p>See here how to use theme storybook in a way that addon-docs will be themed as well: <a href="https://github.com/storybookjs/storybook/blob/master/addons/docs/docs/theming.md">https://github.com/storybookjs/storybook/blob/master/addons/docs/docs/theming.md</a></p>\n</blockquote>\n<h2 id="global-theming"><a href="#global-theming" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Global theming</h2>\n<p>It’s possible to theme Storybook globally.</p>\n<p>We’ve created two basic themes that look good out of the box: “normal” (a light theme) and “dark” (a dark theme). Unless you’ve set your preferred color scheme as dark Storybook will use the light theme as default.</p>\n<p>Make sure you have installed <code>@storybook/addons</code> and <code>@storybook/theming</code> packages.</p>\n<pre><code class="language-sh">npm install @storybook/addons --save-dev\nnpm install @storybook/theming --save-dev\n</code></pre>\n<p>As an example, you can tell Storybook to use the “dark” theme by modifying <code>.storybook/manager.js</code>:</p>\n<pre><code class="language-js">import { addons } from \'@storybook/addons\';\nimport { themes } from \'@storybook/theming\';\n\naddons.setConfig({\n  theme: themes.dark,\n});\n</code></pre>\n<p>When setting a theme, set a full theme object. The theme is replaced, not combined.</p>\n<p>Read on for more on how to create your own theme.</p>\n<h2 id="create-a-theme-quickstart"><a href="#create-a-theme-quickstart" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Create a theme quickstart</h2>\n<p>The easiest way to customize Storybook is to generate a new theme using the <code>create()</code> function from <code>storybook/theming</code>. This function includes shorthands for the most common theme variables. Here’s how to use it:</p>\n<p>First create a new file in <code>.storybook</code> called <code>yourTheme.js</code>.</p>\n<p>Next paste the code below and tweak the variables.</p>\n<pre><code class="language-ts">import { create } from \'@storybook/theming/create\';\n\nexport default create({\n  base: \'light\',\n\n  colorPrimary: \'hotpink\',\n  colorSecondary: \'deepskyblue\',\n\n  // UI\n  appBg: \'white\',\n  appContentBg: \'silver\',\n  appBorderColor: \'grey\',\n  appBorderRadius: 4,\n\n  // Typography\n  fontBase: \'"Open Sans", sans-serif\',\n  fontCode: \'monospace\',\n\n  // Text colors\n  textColor: \'black\',\n  textInverseColor: \'rgba(255,255,255,0.9)\',\n\n  // Toolbar default and active colors\n  barTextColor: \'silver\',\n  barSelectedColor: \'black\',\n  barBg: \'hotpink\',\n\n  // Form colors\n  inputBg: \'white\',\n  inputBorder: \'silver\',\n  inputTextColor: \'black\',\n  inputBorderRadius: 4,\n\n  brandTitle: \'My custom storybook\',\n  brandUrl: \'https://example.com\',\n  brandImage: \'https://placehold.it/350x150\',\n});\n</code></pre>\n<p>Finally, import your theme into <code>.storybook/manager.js</code> and add it to your Storybook parameters.</p>\n<pre><code class="language-js">import { addons } from \'@storybook/addons\';\nimport yourTheme from \'./yourTheme\';\n\naddons.setConfig({\n  theme: yourTheme,\n});\n</code></pre>\n<p>The <code>storybook/theming</code> package is built using TypeScript, so this should help create a valid theme for typescript users. The types are part of the package itself.</p>\n<p>Many theme variables are optional, the <code>base</code> property is NOT. This is a perfectly valid theme:</p>\n<pre><code class="language-ts">import { create } from \'@storybook/theming/create\';\n\nexport default create({\n  base: \'light\',\n\n  brandTitle: \'My custom storybook\',\n  brandUrl: \'https://example.com\',\n  brandImage: \'https://placehold.it/350x150\',\n});\n</code></pre>\n<h2 id="addons-and-theme-creation"><a href="#addons-and-theme-creation" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Addons and theme creation</h2>\n<p>Some addons require specific theme variables that a Storybook user must add. If you share your theme with the community, make sure to support the official and other popular addons so your users have a consistent experience.</p>\n<p>For example, the popular Actions addon uses <a href="https://github.com/xyc/react-inspector/blob/master/src/styles/themes/chromeLight.js">react-inspector</a> which has themes of its own. Supply additional theme variables to style it like so:</p>\n<pre><code class="language-js">addonActionsTheme: {\n  ...chromeLight,\n  BASE_FONT_FAMILY: typography.fonts.mono,\n  BASE_BACKGROUND_COLOR: \'transparent\',\n}\n</code></pre>\n<h3 id="using-the-theme-for-addon-authors"><a href="#using-the-theme-for-addon-authors" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Using the theme for addon authors</h3>\n<p>For a native Storybook experience, we encourage addon authors to reuse the theme variables above. The theming engine relies on <a href="https://emotion.sh/">emotion</a>, a CSS-in-JS library.</p>\n<pre><code class="language-js">import { styled } from \'@storybook/theming\';\n</code></pre>\n<p>Use the theme variables in object notation:</p>\n<pre><code class="language-js">const Component = styled.div(({ theme }) => ({\n  background: theme.background.app,\n  width: 0,\n}));\n</code></pre>\n<p>Or with template literals:</p>\n<pre><code class="language-js">const Component = styled.div`\n  background: `${props => props.theme.background.app}`\n  width: 0;\n`;\n</code></pre>',fields:{slug:"/configurations/theming/"},frontmatter:{title:"Theming Storybook",id:"theming"}}},pathContext:{slug:"/configurations/theming/"}}}});
//# sourceMappingURL=path---configurations-theming-2aad99eca310db6219dc.js.map