webpackJsonp([0xc8fb1bbc4931],{936:function(e,t){e.exports={data:{site:{siteMetadata:{docSections:{basics:["/basics/introduction/","/basics/writing-stories/","/basics/exporting-storybook/","/basics/faq/","/basics/live-examples/"],guides:["/guides/quick-start-guide/","/guides/slow-start-guide/","/guides/guide-html/","/guides/guide-react/","/guides/guide-react-native/","/guides/guide-vue/","/guides/guide-angular/","/guides/guide-mithril/","/guides/guide-marko/","/guides/guide-ember/","/guides/guide-riot/","/guides/guide-svelte/","/guides/guide-preact/"],configurations:["/configurations/overview/","/configurations/options-parameter/","/configurations/default-config/","/configurations/custom-webpack-config/","/configurations/custom-babel-config/","/configurations/typescript-config/","/configurations/add-custom-head-tags/","/configurations/add-custom-body/","/configurations/serving-static-files/","/configurations/env-vars/","/configurations/theming/","/configurations/cli-options/","/configurations/standalone-options/"],formats:["/formats/component-story-format/","/formats/storiesof-api/","/formats/mdx-syntax/"],testing:["/testing/react-ui-testing/","/testing/structural-testing/","/testing/interaction-testing/","/testing/automated-visual-testing/","/testing/manual-testing/"],addons:["/addons/introduction/","/addons/using-addons/","/addons/writing-addons/","/addons/api/"],presets:["/presets/introduction/","/presets/preset-gallery/","/presets/writing-presets/"]}}},allMarkdownRemark:{edges:[{node:{fields:{slug:"/404/"},frontmatter:{title:"",id:null}}},{node:{fields:{slug:"/basics/community/"},frontmatter:{title:"Community",id:"community"}}},{node:{fields:{slug:"/basics/introduction/"},frontmatter:{title:"Introduction",id:"introduction"}}},{node:{fields:{slug:"/addons/introduction/"},frontmatter:{title:"Intro to Addons",id:"introduction"}}},{node:{fields:{slug:"/addons/using-addons/"},frontmatter:{title:"Using Addons",id:"using-addons"}}},{node:{fields:{slug:"/basics/faq/"},frontmatter:{title:"Frequently Asked Questions",id:"faq"}}},{node:{fields:{slug:"/basics/toolbar-guide/"},frontmatter:{title:"Toolbar",id:"toolbar-guide"}}},{node:{fields:{slug:"/basics/live-examples/"},frontmatter:{title:"Live Examples",id:"live-examples"}}},{node:{fields:{slug:"/basics/exporting-storybook/"},frontmatter:{title:"Exporting Storybook as a Static App",id:"exporting-storybook"}}},{node:{fields:{slug:"/configurations/add-custom-head-tags/"},frontmatter:{title:"Add Custom Head Tags",id:"add-custom-head-tags"}}},{node:{fields:{slug:"/configurations/add-custom-body/"},frontmatter:{title:"Add Custom Body",id:"add-custom-body"}}},{node:{fields:{slug:"/configurations/custom-babel-config/"},frontmatter:{title:"Custom Babel Config",id:"custom-babel-config"}}},{node:{fields:{slug:"/configurations/custom-postcss-config/"},frontmatter:{title:"Custom Postcss Config",id:"custom-postcss-config"}}},{node:{fields:{slug:"/configurations/cli-options/"},frontmatter:{title:"CLI Options",id:"cli-options"}}},{node:{fields:{slug:"/configurations/default-config/"},frontmatter:{title:"Default Config",id:"default-config"}}},{node:{fields:{slug:"/configurations/serving-static-files/"},frontmatter:{title:"Serving Static Files",id:"serving-static-files"}}},{node:{fields:{slug:"/configurations/env-vars/"},frontmatter:{title:"Using Environment Variables",id:"env-vars"}}},{node:{fields:{slug:"/configurations/overview/"},frontmatter:{title:"Configuration overview",id:"overview"}}},{node:{fields:{slug:"/configurations/standalone-options/"},frontmatter:{title:"Standalone Options",id:"standalone-options"}}},{node:{fields:{slug:"/configurations/theming/"},frontmatter:{title:"Theming Storybook",id:"theming"}}},{node:{fields:{slug:"/presets/introduction/"},frontmatter:{title:"Intro to Presets",id:"introduction"}}},{node:{fields:{slug:"/configurations/options-parameter/"},frontmatter:{title:"Options Parameter",id:"options-parameter"}}},{node:{fields:{slug:"/presets/preset-gallery/"},frontmatter:{title:"Preset Gallery",id:"preset-gallery"}}},{node:{fields:{slug:"/presets/writing-presets/"},frontmatter:{title:"Writing Presets",id:"writing-presets"}}},{node:{fields:{slug:"/formats/mdx-syntax/"},frontmatter:{title:"MDX Syntax",id:"mdx-syntax"}}},{node:{fields:{slug:"/formats/component-story-format/"},frontmatter:{title:"Component Story Format (CSF)",id:"component-story-format"}}},{node:{fields:{slug:"/guides/guide-ember/"},frontmatter:{title:"Storybook for Ember",id:"guide-ember"}}},{node:{fields:{slug:"/guides/guide-angular/"},frontmatter:{title:"Storybook for Angular",id:"guide-angular"}}},{node:{fields:{slug:"/guides/guide-html/"},frontmatter:{title:"Storybook for HTML",id:"guide-html"}}},{node:{fields:{slug:"/guides/guide-mithril/"},frontmatter:{title:"Storybook for Mithril",id:"guide-mithril"}}},{node:{fields:{slug:"/formats/storiesof-api/"},frontmatter:{title:"StoriesOf API",id:"storiesof-api"}}},{node:{fields:{slug:"/guides/guide-rax/"},frontmatter:{title:"Storybook for Rax",id:"guide-rax"}}},{node:{fields:{slug:"/guides/guide-marko/"},frontmatter:{title:"Storybook for Marko",id:"guide-marko"}}},{node:{fields:{slug:"/guides/guide-preact/"},frontmatter:{title:"Storybook for Preact",id:"guide-preact"}}},{node:{fields:{slug:"/guides/guide-react/"},frontmatter:{title:"Storybook for React",id:"guide-react"}}},{node:{fields:{slug:"/guides/guide-svelte/"},frontmatter:{title:"Storybook for Svelte",id:"guide-svelte"}}},{node:{fields:{slug:"/guides/guide-react-native/"},frontmatter:{title:"Storybook for React Native",id:"guide-react-native"}}},{node:{fields:{slug:"/guides/guide-riot/"},frontmatter:{title:"Storybook for Riot",id:"guide-riot"}}},{node:{fields:{slug:"/guides/guide-vue/"},frontmatter:{title:"Storybook for Vue",id:"guide-vue"}}},{node:{fields:{slug:"/guides/quick-start-guide/"},frontmatter:{title:"Quick Start Guide",id:"quick-start-guide"}}},{node:{fields:{slug:"/guides/slow-start-guide/"},frontmatter:{title:"Slow Start Guide",id:"slow-start-guide"}}},{node:{fields:{slug:"/testing/react-ui-testing/"},frontmatter:{title:"Introduction: React UI Testing",id:"react-ui-testing"}}},{node:{fields:{slug:"/testing/interaction-testing/"},frontmatter:{title:"Interaction Testing",id:"interaction-testing"}}},{node:{fields:{slug:"/testing/structural-testing/"},frontmatter:{title:"Structural Testing",id:"structural-testing"}}},{node:{fields:{slug:"/testing/manual-testing/"},frontmatter:{title:"Manual Testing",id:"manual-testing"}}},{node:{fields:{slug:"/addons/api/"},frontmatter:{title:"API",id:"api"}}},{node:{fields:{slug:"/addons/addon-gallery/"},frontmatter:{title:"Addon Gallery",id:"addon-gallery"}}},{node:{fields:{slug:"/addons/writing-addons/"},frontmatter:{title:"Writing Addons",id:"writing-addons"}}},{node:{fields:{slug:"/basics/writing-stories/"},frontmatter:{title:"Writing Stories",id:"writing-stories"}}},{node:{fields:{slug:"/configurations/custom-webpack-config/"},frontmatter:{title:"Custom Webpack Config",id:"custom-webpack-config"}}},{node:{fields:{slug:"/configurations/typescript-config/"},frontmatter:{title:"TypeScript Config",id:"typescript-config"}}},{node:{fields:{slug:"/testing/automated-visual-testing/"},frontmatter:{title:"Automated Visual Testing",id:"automated-visual-testing"}}}]},markdownRemark:{html:'<p>This is a central reference for using Storybook with TypeScript.</p>\n<h2 id="typescript-configuration-presets"><a href="#typescript-configuration-presets" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Typescript configuration presets</h2>\n<p>The fastest and easiest way to write and configure your stories in TypeScript is by using a Storybook preset.</p>\n<ul>\n<li>\n<p>If you’re using Create React App (CRA) and have configured it to work with TS, you should use <a href="https://github.com/storybookjs/presets/tree/master/packages/preset-create-react-app"><code>@storybook/preset-create-react-app</code></a>, which configures Storybook to reuse CRA’s TS handling.</p>\n</li>\n<li>\n<p>If you are not using CRA or have other requirements, then the next best option is <a href="https://github.com/storybookjs/presets/tree/master/packages/preset-typescript"><code>@storybook/preset-typescript</code></a>, which configures <code>ts-loader</code> under the hood.</p>\n</li>\n</ul>\n<p>If you need more control than these presets offer, read on for manual configuration instructions.</p>\n<p>You can learn more about Storybook presets <a href="../../presets/introduction">over here</a>.</p>\n<blockquote>\n<p>If using TypeScript, some addons require features available in TS version 3.4+.</p>\n</blockquote>\n<h2 id="setting-up-typescript-with-ts-loader"><a href="#setting-up-typescript-with-ts-loader" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Setting up TypeScript with ts-loader</h2>\n<h3 id="dependencies-you-may-need"><a href="#dependencies-you-may-need" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Dependencies you may need</h3>\n<pre><code class="language-bash">yarn add -D typescript\nyarn add -D ts-loader\nyarn add -D @storybook/addon-info react-docgen-typescript-loader # optional but recommended\nyarn add -D jest "@types/jest" ts-jest #testing\n</code></pre>\n<h3 id="setting-up-typescript-to-work-with-storybook"><a href="#setting-up-typescript-to-work-with-storybook" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Setting up TypeScript to work with Storybook</h3>\n<p>We <a href="/configurations/custom-webpack-config/#full-control-mode--default">configure storybook’s webpack</a> by changing <code>.storybook/main.js</code>:</p>\n<pre><code class="language-js">module.exports = {\n  stories: [\'../src/**/*.stories.tsx\'],\n  webpackFinal: async config => {\n    config.module.rules.push({\n      test: /\\.(ts|tsx)$/,\n      use: [\n        {\n          loader: require.resolve(\'ts-loader\'),\n        },\n        // Optional\n        {\n          loader: require.resolve(\'react-docgen-typescript-loader\'),\n        },\n      ],\n    });\n    config.resolve.extensions.push(\'.ts\', \'.tsx\');\n    return config;\n  },\n};\n</code></pre>\n<p>The above example shows a working Webpack config with the <a href="https://github.com/strothj/react-docgen-typescript-loader">TSDocgen plugin</a> integrated. This plugin is not necessary to use Storybook and the section marked <code>// optional</code> can be safely removed if the features of TSDocgen are not required.</p>\n<h3 id="tsconfigjson"><a href="#tsconfigjson" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>tsconfig.json</code></h3>\n<pre><code class="language-json">{\n  "compilerOptions": {\n    "outDir": "build/lib",\n    "module": "commonjs",\n    "target": "es5",\n    "lib": ["es5", "es6", "es7", "es2017", "dom"],\n    "sourceMap": true,\n    "allowJs": false,\n    "jsx": "react",\n    "moduleResolution": "node",\n    "rootDirs": ["src", "stories"],\n    "baseUrl": "src",\n    "forceConsistentCasingInFileNames": true,\n    "noImplicitReturns": true,\n    "noImplicitThis": true,\n    "noImplicitAny": true,\n    "strictNullChecks": true,\n    "suppressImplicitAnyIndexErrors": true,\n    "noUnusedLocals": true,\n    "declaration": true,\n    "allowSyntheticDefaultImports": true,\n    "experimentalDecorators": true,\n    "emitDecoratorMetadata": true\n  },\n  "include": ["src/**/*"],\n  "exclude": ["node_modules", "build", "scripts"]\n}\n</code></pre>\n<p>This is for the default configuration where <code>/stories</code> is a peer of <code>src</code>. If you have them all in <code>src</code>, you may wish to replace <code>"rootDirs": ["src", "stories"]</code> above with <code>"rootDir": "src",</code>.</p>\n<h2 id="setting-up-typescript-with-babel-loader"><a href="#setting-up-typescript-with-babel-loader" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Setting up TypeScript with babel-loader</h2>\n<h3 id="a-note-for-create-react-app-users"><a href="#a-note-for-create-react-app-users" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>A note for Create React App users</h3>\n<p>Please use <a href="https://github.com/storybookjs/presets/tree/master/packages/preset-create-react-app"><code>@storybook/preset-create-react-app</code></a> for full compatibility with <a href="https://create-react-app.dev/">Create React App</a> features - which includes TypeScript support.</p>\n<h3 id="setting-up-typescript-to-work-with-storybook-1"><a href="#setting-up-typescript-to-work-with-storybook-1" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Setting up TypeScript to work with Storybook</h3>\n<p>The following code uses <a href="https://github.com/facebook/create-react-app/tree/master/packages/babel-preset-react-app"><code>babel-preset-react-app</code></a>.</p>\n<p>We will create a <a href="/configurations/custom-webpack-config/">custom Webpack config</a> by creating editing/creating the <code>.storybook/main.js</code>:</p>\n<pre><code class="language-js">module.exports = {\n  stories: [\'../src/**/*.stories.tsx\'],\n  webpackFinal: async config => {\n    config.module.rules.push({\n      test: /\\.(ts|tsx)$/,\n      loader: require.resolve(\'babel-loader\'),\n      options: {\n        presets: [[\'react-app\', { flow: false, typescript: true }]],\n      },\n    });\n    config.resolve.extensions.push(\'.ts\', \'.tsx\');\n    return config;\n  },\n};\n</code></pre>\n<h3 id="tsconfigjson-1"><a href="#tsconfigjson-1" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>tsconfig.json</code></h3>\n<p>If your stories are outside the <code>src</code> folder, for example the <code>stories</code> folder in root, then <code>"rootDirs": ["src", "stories"]</code> needs to be added to be added to <code>compilerOptions</code> so it knows what folders to compile. Make sure <code>jsx</code> is set to preserve. Should be unchanged.</p>\n<h2 id="create-a-tsx-storybook-index"><a href="#create-a-tsx-storybook-index" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Create a TSX storybook index</h2>\n<p>The default storybook index file is <code>stories/index.stories.js</code> — you’ll want to rename this to <code>stories/index.stories.tsx</code>.</p>\n<h2 id="using-typescript-with-the-tsdocgen-addon"><a href="#using-typescript-with-the-tsdocgen-addon" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Using TypeScript with the TSDocgen addon</h2>\n<p>The very handy <a href="https://github.com/storybookjs/storybook/tree/master/addons/info">Storybook Info addon</a> autogenerates prop tables documentation for each component, however it doesn’t work with Typescript types. The current solution is to use <a href="https://github.com/strothj/react-docgen-typescript-loader">react-docgen-typescript-loader</a> to preprocess the TypeScript files to give the Info addon what it needs. The webpack config above does this, and so for the rest of your stories you use it as per normal:</p>\n<pre><code class="language-js">import * as React from \'react\';\nimport TicTacToeCell from \'./TicTacToeCell\';\n\nexport default {\n  title: \'Components\',\n  parameters: {\n    info: { inline: true },\n  },\n};\n\nexport const TicTacToeCell = () => (\n  &#x3C;TicTacToeCell value="X" position={{ x: 0, y: 0 }} />,\n);\n</code></pre>\n<h2 id="customizing-type-annotationsdescriptions"><a href="#customizing-type-annotationsdescriptions" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Customizing Type annotations/descriptions</h2>\n<p>Please refer to the <a href="https://github.com/strothj/react-docgen-typescript-loader">react-docgen-typescript-loader</a> docs for writing prop descriptions and other annotations to your Typescript interfaces.</p>\n<p>Additional annotation can be achieved by setting a default set of info parameters in <code>.storybook/preview.js</code>:</p>\n<pre><code class="language-ts">import { addDecorator } from \'@storybook/react\';\nimport { withInfo } from \'@storybook/addon-info\';\n\naddDecorator(\n  withInfo({\n    styles: {\n      header: {\n        h1: {\n          marginRight: \'20px\',\n          fontSize: \'25px\',\n          display: \'inline\',\n        },\n        body: {\n          paddingTop: 0,\n          paddingBottom: 0,\n        },\n        h2: {\n          display: \'inline\',\n          color: \'#999\',\n        },\n      },\n      infoBody: {\n        backgroundColor: \'#eee\',\n        padding: \'0px 5px\',\n        lineHeight: \'2\',\n      },\n    },\n    inline: true,\n    source: false,\n  })\n);\n</code></pre>\n<p>Note: Component docgen information can not be generated for components that are only exported as default. You can work around the issue by exporting the component using a named export.</p>\n<h2 id="setting-up-jest-tests"><a href="#setting-up-jest-tests" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Setting up Jest tests</h2>\n<p>The ts-jest <a href="https://github.com/kulshekhar/ts-jest">README</a> explains pretty clearly how to get Jest to recognize TypeScript code.</p>\n<p>This is an example <code>jest.config.js</code> file for jest:</p>\n<pre><code class="language-js">module.exports = {\n  transform: {\n    \'.(ts|tsx)\': \'ts-jest\',\n  },\n  testPathIgnorePatterns: [\'/node_modules/\', \'/lib/\'],\n  testRegex: \'(/test/.*|\\\\.(test|spec))\\\\.(ts|tsx|js)$\',\n  moduleFileExtensions: [\'ts\', \'tsx\', \'js\', \'json\'],\n};\n</code></pre>\n<h2 id="building-your-typescript-storybook"><a href="#building-your-typescript-storybook" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Building your TypeScript Storybook</h2>\n<p>You will need to set up some scripts - these may help:</p>\n<pre><code class="language-json">  "scripts": {\n    "start": "react-scripts-ts start",\n    "build": "npm run lint &#x26;&#x26; npm run build-lib &#x26;&#x26; build-storybook",\n    "build-lib-watch": "tsc -w",\n    "build-lib": "tsc &#x26;&#x26; npm run copy-css-to-lib &#x26;&#x26; npm run copy-svg-to-lib &#x26;&#x26; npm run copy-png-to-lib &#x26;&#x26; npm run copy-woff2-to-lib",\n    "test": "react-scripts-ts test --env=jsdom",\n    "test:coverage": "npm test -- --coverage",\n    "eject": "react-scripts-ts eject",\n    "storybook": "start-storybook -p 6006",\n    "build-storybook": "build-storybook",\n    "copy-css-to-lib": "cpx \\"./src/**/*.css\\" ./build/lib",\n    "copy-woff2-to-lib": "cpx \\"./src/**/*.woff2\\" ./build/lib",\n    "copy-svg-to-lib": "cpx \\"./src/**/*.svg\\" ./build/lib",\n    "copy-png-to-lib": "cpx \\"./src/**/*.png\\" ./build/lib",\n    "lint": "tslint -c tslint.json \'src/**/*.{ts,tsx}\'"\n  },\n</code></pre>\n<h2 id="related-issues-and-helpful-resources"><a href="#related-issues-and-helpful-resources" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Related Issues and Helpful Resources</h2>\n<ul>\n<li><a href="https://medium.com/@mtiller/storybook-react-typescript-and-jest-c9059ea06fa7">Storybook, React, TypeScript and Jest</a></li>\n<li><a href="http://www.joshschreuder.me/react-storybooks-with-typescript/">React, Storybook &#x26; TypeScript</a></li>\n</ul>',fields:{slug:"/configurations/typescript-config/"},frontmatter:{title:"TypeScript Config",id:"typescript-config"}}},pathContext:{slug:"/configurations/typescript-config/"}}}});
//# sourceMappingURL=path---configurations-typescript-config-4c3a48ca6711afc0c049.js.map