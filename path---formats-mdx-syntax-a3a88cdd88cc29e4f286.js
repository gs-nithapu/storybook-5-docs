webpackJsonp([0xc5813c7ed2b5],{939:function(e,t){e.exports={data:{site:{siteMetadata:{docSections:{basics:["/basics/introduction/","/basics/writing-stories/","/basics/exporting-storybook/","/basics/faq/","/basics/live-examples/"],guides:["/guides/quick-start-guide/","/guides/slow-start-guide/","/guides/guide-html/","/guides/guide-react/","/guides/guide-react-native/","/guides/guide-vue/","/guides/guide-angular/","/guides/guide-mithril/","/guides/guide-marko/","/guides/guide-ember/","/guides/guide-riot/","/guides/guide-svelte/","/guides/guide-preact/"],configurations:["/configurations/overview/","/configurations/options-parameter/","/configurations/default-config/","/configurations/custom-webpack-config/","/configurations/custom-babel-config/","/configurations/typescript-config/","/configurations/add-custom-head-tags/","/configurations/add-custom-body/","/configurations/serving-static-files/","/configurations/env-vars/","/configurations/theming/","/configurations/cli-options/","/configurations/standalone-options/"],formats:["/formats/component-story-format/","/formats/storiesof-api/","/formats/mdx-syntax/"],testing:["/testing/react-ui-testing/","/testing/structural-testing/","/testing/interaction-testing/","/testing/automated-visual-testing/","/testing/manual-testing/"],addons:["/addons/introduction/","/addons/using-addons/","/addons/writing-addons/","/addons/api/"],presets:["/presets/introduction/","/presets/preset-gallery/","/presets/writing-presets/"]}}},allMarkdownRemark:{edges:[{node:{fields:{slug:"/404/"},frontmatter:{title:"",id:null}}},{node:{fields:{slug:"/basics/community/"},frontmatter:{title:"Community",id:"community"}}},{node:{fields:{slug:"/basics/introduction/"},frontmatter:{title:"Introduction",id:"introduction"}}},{node:{fields:{slug:"/addons/introduction/"},frontmatter:{title:"Intro to Addons",id:"introduction"}}},{node:{fields:{slug:"/addons/using-addons/"},frontmatter:{title:"Using Addons",id:"using-addons"}}},{node:{fields:{slug:"/basics/faq/"},frontmatter:{title:"Frequently Asked Questions",id:"faq"}}},{node:{fields:{slug:"/basics/toolbar-guide/"},frontmatter:{title:"Toolbar",id:"toolbar-guide"}}},{node:{fields:{slug:"/basics/live-examples/"},frontmatter:{title:"Live Examples",id:"live-examples"}}},{node:{fields:{slug:"/basics/exporting-storybook/"},frontmatter:{title:"Exporting Storybook as a Static App",id:"exporting-storybook"}}},{node:{fields:{slug:"/configurations/add-custom-head-tags/"},frontmatter:{title:"Add Custom Head Tags",id:"add-custom-head-tags"}}},{node:{fields:{slug:"/configurations/add-custom-body/"},frontmatter:{title:"Add Custom Body",id:"add-custom-body"}}},{node:{fields:{slug:"/configurations/custom-babel-config/"},frontmatter:{title:"Custom Babel Config",id:"custom-babel-config"}}},{node:{fields:{slug:"/configurations/custom-postcss-config/"},frontmatter:{title:"Custom Postcss Config",id:"custom-postcss-config"}}},{node:{fields:{slug:"/configurations/cli-options/"},frontmatter:{title:"CLI Options",id:"cli-options"}}},{node:{fields:{slug:"/configurations/default-config/"},frontmatter:{title:"Default Config",id:"default-config"}}},{node:{fields:{slug:"/configurations/serving-static-files/"},frontmatter:{title:"Serving Static Files",id:"serving-static-files"}}},{node:{fields:{slug:"/configurations/env-vars/"},frontmatter:{title:"Using Environment Variables",id:"env-vars"}}},{node:{fields:{slug:"/configurations/overview/"},frontmatter:{title:"Configuration overview",id:"overview"}}},{node:{fields:{slug:"/configurations/standalone-options/"},frontmatter:{title:"Standalone Options",id:"standalone-options"}}},{node:{fields:{slug:"/configurations/theming/"},frontmatter:{title:"Theming Storybook",id:"theming"}}},{node:{fields:{slug:"/presets/introduction/"},frontmatter:{title:"Intro to Presets",id:"introduction"}}},{node:{fields:{slug:"/configurations/options-parameter/"},frontmatter:{title:"Options Parameter",id:"options-parameter"}}},{node:{fields:{slug:"/presets/preset-gallery/"},frontmatter:{title:"Preset Gallery",id:"preset-gallery"}}},{node:{fields:{slug:"/presets/writing-presets/"},frontmatter:{title:"Writing Presets",id:"writing-presets"}}},{node:{fields:{slug:"/formats/mdx-syntax/"},frontmatter:{title:"MDX Syntax",id:"mdx-syntax"}}},{node:{fields:{slug:"/formats/component-story-format/"},frontmatter:{title:"Component Story Format (CSF)",id:"component-story-format"}}},{node:{fields:{slug:"/guides/guide-ember/"},frontmatter:{title:"Storybook for Ember",id:"guide-ember"}}},{node:{fields:{slug:"/guides/guide-angular/"},frontmatter:{title:"Storybook for Angular",id:"guide-angular"}}},{node:{fields:{slug:"/guides/guide-html/"},frontmatter:{title:"Storybook for HTML",id:"guide-html"}}},{node:{fields:{slug:"/guides/guide-mithril/"},frontmatter:{title:"Storybook for Mithril",id:"guide-mithril"}}},{node:{fields:{slug:"/formats/storiesof-api/"},frontmatter:{title:"StoriesOf API",id:"storiesof-api"}}},{node:{fields:{slug:"/guides/guide-rax/"},frontmatter:{title:"Storybook for Rax",id:"guide-rax"}}},{node:{fields:{slug:"/guides/guide-marko/"},frontmatter:{title:"Storybook for Marko",id:"guide-marko"}}},{node:{fields:{slug:"/guides/guide-preact/"},frontmatter:{title:"Storybook for Preact",id:"guide-preact"}}},{node:{fields:{slug:"/guides/guide-react/"},frontmatter:{title:"Storybook for React",id:"guide-react"}}},{node:{fields:{slug:"/guides/guide-svelte/"},frontmatter:{title:"Storybook for Svelte",id:"guide-svelte"}}},{node:{fields:{slug:"/guides/guide-react-native/"},frontmatter:{title:"Storybook for React Native",id:"guide-react-native"}}},{node:{fields:{slug:"/guides/guide-riot/"},frontmatter:{title:"Storybook for Riot",id:"guide-riot"}}},{node:{fields:{slug:"/guides/guide-vue/"},frontmatter:{title:"Storybook for Vue",id:"guide-vue"}}},{node:{fields:{slug:"/guides/quick-start-guide/"},frontmatter:{title:"Quick Start Guide",id:"quick-start-guide"}}},{node:{fields:{slug:"/guides/slow-start-guide/"},frontmatter:{title:"Slow Start Guide",id:"slow-start-guide"}}},{node:{fields:{slug:"/testing/react-ui-testing/"},frontmatter:{title:"Introduction: React UI Testing",id:"react-ui-testing"}}},{node:{fields:{slug:"/testing/interaction-testing/"},frontmatter:{title:"Interaction Testing",id:"interaction-testing"}}},{node:{fields:{slug:"/testing/structural-testing/"},frontmatter:{title:"Structural Testing",id:"structural-testing"}}},{node:{fields:{slug:"/testing/manual-testing/"},frontmatter:{title:"Manual Testing",id:"manual-testing"}}},{node:{fields:{slug:"/addons/api/"},frontmatter:{title:"API",id:"api"}}},{node:{fields:{slug:"/addons/addon-gallery/"},frontmatter:{title:"Addon Gallery",id:"addon-gallery"}}},{node:{fields:{slug:"/addons/writing-addons/"},frontmatter:{title:"Writing Addons",id:"writing-addons"}}},{node:{fields:{slug:"/basics/writing-stories/"},frontmatter:{title:"Writing Stories",id:"writing-stories"}}},{node:{fields:{slug:"/configurations/custom-webpack-config/"},frontmatter:{title:"Custom Webpack Config",id:"custom-webpack-config"}}},{node:{fields:{slug:"/configurations/typescript-config/"},frontmatter:{title:"TypeScript Config",id:"typescript-config"}}},{node:{fields:{slug:"/testing/automated-visual-testing/"},frontmatter:{title:"Automated Visual Testing",id:"automated-visual-testing"}}}]},markdownRemark:{html:'<p><code>MDX</code> is the syntax <a href="https://github.com/storybookjs/storybook/blob/next/addons/docs/">Storybook Docs</a> uses to capture long-form markdown documentation and stories in one file. You can also write pure documentation pages in <code>MDX</code> and add them to Storybook alongside your stories. <a href="https://medium.com/storybookjs/rich-docs-with-storybook-mdx-61bc145ae7bc">Read the announcement</a> to learn more about how and why it came to be.</p>\n<ul>\n<li><a href="#basic-example">Basic example</a></li>\n<li><a href="#mdx-flavored-csf">MDX-Flavored CSF</a></li>\n<li><a href="#writing-stories">Writing stories</a></li>\n<li><a href="#embedding-stories">Embedding stories</a></li>\n<li><a href="#decorators-and-parameters">Decorators and parameters</a></li>\n<li><a href="#documentation-only-mdx">Documentation-only MDX</a></li>\n<li><a href="#mdx-file-names">MDX file names</a></li>\n<li><a href="#more-resources">More resources</a></li>\n</ul>\n<h2 id="basic-example"><a href="#basic-example" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Basic example</h2>\n<p>Let’s get started with an example that combines markdown with a single story:</p>\n<pre><code class="language-md">import { Meta, Story, Preview } from \'@storybook/addon-docs/blocks\';\nimport { Checkbox } from \'./Checkbox\';\n\n&#x3C;Meta title="MDX/Checkbox" component={Checkbox} />\n\n# Checkbox\n\nWith `MDX` we can define a story for `Checkbox` right in the middle of our\nmarkdown documentation.\n\n&#x3C;Preview>\n  &#x3C;Story name="all checkboxes">\n    &#x3C;form>\n      &#x3C;Checkbox id="Unchecked" label="Unchecked" />\n      &#x3C;Checkbox id="Checked" label="Checked" checked />\n      &#x3C;Checkbox appearance="secondary" id="second" label="Secondary" checked />\n    &#x3C;/form>\n  &#x3C;/Story>\n&#x3C;/Preview>\n</code></pre>\n<p>And here’s how that’s rendered in Storybook:</p>\n<center>\n  <img src="https://raw.githubusercontent.com/storybookjs/storybook/master/addons/docs/docs/media/mdx-simple.png" width="100%">\n</center>\n<p>As you can see there’s a lot going on here. We’re writing Markdown, we’re writing JSX, and somehow we’re also defining Storybook stories that are drop-in compatible with the entire Storybook ecosystem.</p>\n<p>Let’s break it down.</p>\n<h2 id="mdx-flavored-csf"><a href="#mdx-flavored-csf" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>MDX-Flavored CSF</h2>\n<p><a href="https://mdxjs.com/">MDX</a> is a standard file format that combines Markdown with JSX. This means you can use Markdown’s terse syntax (such as <code># heading</code>) for your documentation, and freely embed JSX component blocks at any point in the file.</p>\n<p>MDX-flavored <a href="https://medium.com/storybookjs/component-story-format-66f4c32366df">Component Story Format (CSF)</a> includes a collection of components called <strong>“Doc Blocks”</strong>, that allow Storybook to translate MDX files into storybook stories. MDX-defined stories are identical to regular Storybook stories, so they can be used with Storybook’s entire ecosystem of addons and view layers.</p>\n<p>For example, here’s the story from <code>Checkbox</code> example above, rewritten in CSF:</p>\n<pre><code class="language-js">import React from \'react\';\nimport { Checkbox } from \'./Checkbox\';\nexport default { title: "MDX/Checkbox", component: Checkbox };\nexport const allCheckboxes = () => (\n  &#x3C;form>\n    &#x3C;Checkbox id="Unchecked" label="Unchecked" />\n    &#x3C;Checkbox id="Checked" label="Checked" checked />\n    &#x3C;Checkbox appearance="secondary" id="second" label="Secondary" checked />\n  &#x3C;/form>\n);\n</code></pre>\n<p>There’s a one-to-one mapping from the code in <code>MDX</code> to <code>CSF</code>, which in turn directly corresponds to Storybook’s internal <code>storiesOf</code> API. As a user, this means your existing Storybook knowledge should translate between the three. And technically, this means that the transformations that happen under the hood are simple and predictable.</p>\n<h2 id="writing-stories"><a href="#writing-stories" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Writing stories</h2>\n<p>Now let’s look at a more realistic example to see a few more things we can do:</p>\n<pre><code class="language-md">import { Meta, Story, Preview } from \'@storybook/addon-docs/blocks\';\n\nimport { Badge } from \'./Badge\';\nimport { Icon } from \'./Icon\';\n\n&#x3C;Meta title="MDX/Badge" component={Badge} />\n\n# Badge\n\nLet\'s define a story for our `Badge` component:\n\n&#x3C;Story name="positive">\n  &#x3C;Badge status="positive">Positive&#x3C;/Badge>\n&#x3C;/Story>\n\nWe can drop it in a `Preview` to get a code snippet:\n\n&#x3C;Preview>\n  &#x3C;Story name="negative">\n    &#x3C;Badge status="negative">Negative&#x3C;/Badge>\n  &#x3C;/Story>\n&#x3C;/Preview>\n\nWe can even preview multiple stories in a block. This\ngets rendered as a group, but defines individual stories\nwith unique URLs and isolated snapshot tests.\n\n&#x3C;Preview>\n  &#x3C;Story name="warning">\n    &#x3C;Badge status="warning">Warning&#x3C;/Badge>\n  &#x3C;/Story>\n  &#x3C;Story name="neutral">\n    &#x3C;Badge status="neutral">Neutral&#x3C;/Badge>\n  &#x3C;/Story>\n  &#x3C;Story name="error">\n    &#x3C;Badge status="error">Error&#x3C;/Badge>\n  &#x3C;/Story>\n  &#x3C;Story name="with icon">\n    &#x3C;Badge status="warning">\n      &#x3C;Icon icon="check" inline />\n      with icon\n    &#x3C;/Badge>\n  &#x3C;/Story>\n&#x3C;/Preview>\n</code></pre>\n<p>And here’s how that gets rendered in Storybook:</p>\n<center>\n  <img src="https://raw.githubusercontent.com/storybookjs/storybook/master/addons/docs/docs/media/mdx-page.png" width="100%">\n</center>\n<h2 id="embedding-stories"><a href="#embedding-stories" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Embedding stories</h2>\n<p>Suppose you have an existing story and want to embed it into your docs. Here’s how to show a story with ID <code>some--id</code> (check the browser URL in Storybook v5+ to see a story’s ID):</p>\n<pre><code class="language-md">import { Story } from "@storybook/addon-docs/blocks";\n\n# Some header\n\nAnd markdown here\n\n&#x3C;Story id="some--id" />\n</code></pre>\n<p>You can also use the rest of the MDX features in conjunction with embedding. That includes source, preview, and prop tables.</p>\n<h2 id="decorators-and-parameters"><a href="#decorators-and-parameters" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Decorators and parameters</h2>\n<p>To add <a href="https://github.com/storybookjs/storybook/blob/next/docs/src/pages/basics/writing-stories/index.md#decorators">decorators</a> and <a href="https://github.com/storybookjs/storybook/blob/next/docs/src/pages/basics/writing-stories/index.md#parameters">parameters</a> in MDX:</p>\n<pre><code class="language-md">&#x3C;Meta\n  title=\'MyComponent\'\n  decorators={[ ... ]}\n  parameters={{ ... }}\n/>\n\n&#x3C;Story name="story" decorators={[ ... ]} parameters={{ ... }} >\n...\n&#x3C;/Story>\n</code></pre>\n<p>In addition, global decorators work just like before, e.g. adding the following to your <code>.storybook/preview.js</code>:</p>\n<pre><code class="language-js">import { addDecorator, addParameters } from \'@storybook/react\';\n\naddDecorator(...);\naddParameters({ ... });\n</code></pre>\n<h2 id="documentation-only-mdx"><a href="#documentation-only-mdx" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Documentation-only MDX</h2>\n<p>Typically, when you use Storybook MDX, you define stories in the MDX documentation is automatically associated with those stories. But what if you want to write Markdown-style documentation and have it show up in your Storybook?</p>\n<p>If you don’t define stories in your MDX, you can write MDX documentation and associate it with an existing story, or embed that MDX as its own documentation node in your Storybook’s navigation.</p>\n<p>If you don’t define a <code>Meta</code>, you can write Markdown and associate with an existing story. See <a href="https://github.com/storybookjs/storybook/blob/master/addons/docs/docs/recipes.md#csf-stories-with-mdx-docs">“CSF Stories with MDX Docs”</a>.</p>\n<p>To get a “documentation-only story”, in your UI, define a <code>&#x3C;Meta></code> as you normally would, but don’t define any stories. It will show up in your UI as a documentation node:</p>\n<center>\n  <img src="https://raw.githubusercontent.com/storybookjs/storybook/master/addons/docs/docs/media/mdx-documentation-only.png" width="100%">\n</center>\n<h2 id="mdx-file-names"><a href="#mdx-file-names" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>MDX file names</h2>\n<p>Unless you use a custom webpack configuration, all of your <code>MDX</code> files should have the suffix <code>*.stories.mdx</code>. This tells Storybook to apply its special processing to the <code>&#x3C;Meta></code> and <code>&#x3C;Story></code> elements in the file.</p>\n<p>Be sure to update your Storybook config file to load <code>.stories.mdx</code> stories, as per the <a href="https://github.com/storybookjs/storybook/tree/master/addons/docs#installation"><code>addon-docs</code> installation instructions</a>.</p>\n<h2 id="more-resources"><a href="#more-resources" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>More resources</h2>\n<p>For more information:</p>\n<ul>\n<li><a href="../component-story-format/">Component Story Format (CSF)</a></li>\n<li><a href="https://github.com/storybookjs/storybook/blob/next/addons/docs/">Storybook Docs</a></li>\n<li><a href="https://medium.com/storybookjs/rich-docs-with-storybook-mdx-61bc145ae7bc">Rich docs with Storybook MDX</a></li>\n</ul>',fields:{slug:"/formats/mdx-syntax/"},frontmatter:{title:"MDX Syntax",id:"mdx-syntax"}}},pathContext:{slug:"/formats/mdx-syntax/"}}}});
//# sourceMappingURL=path---formats-mdx-syntax-a3a88cdd88cc29e4f286.js.map